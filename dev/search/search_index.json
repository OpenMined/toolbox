{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Toolbox","text":"<p>A privacy-first tool to install MCP servers and background agents for your personal data.</p>"},{"location":"#overview","title":"Overview","text":"<p>Toolbox is a CLI tool for installing and managing MCP servers and background agents, made for developers.</p> <ul> <li>Install MCP servers with background agents using <code>tb install &lt;appname&gt;</code></li> <li>Support for popular developer tools (GitHub, Slack, Discord, Obsidian, Gmail, etc.)</li> <li>Compatible with multiple clients (Claude Desktop, Cursor)</li> <li>Choose between fully local or free hosted options</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#installation","title":"Installation","text":"<pre><code># Install via uv\nuv tool install --prerelease allow --python 3.12 -U syft-toolbox\n\n# Verify installation\ntb info\n</code></pre>"},{"location":"#basic-commands","title":"Basic Commands","text":"<pre><code># List available apps\ntb list-store\n\n# Install an app\ntb install slack-mcp\n\n# List installed apps\ntb list\n\n# Show app details\ntb show &lt;appname&gt;\n</code></pre>"},{"location":"#features","title":"Features","text":""},{"location":"#triggers","title":"Triggers","text":"<p>Automate tasks with scheduled scripts and event-driven workflows.</p>"},{"location":"#notifications","title":"Notifications","text":"<p>Send notifications from your triggers and MCP servers using ntfy.sh.</p>"},{"location":"#available-mcp-servers","title":"Available MCP Servers","text":"Name Description Install slack-mcp Access Slack messages <code>tb install slack-mcp</code> discord-mcp Access Discord messages <code>tb install discord-mcp</code> obsidian-mcp Manage Obsidian notes <code>tb install obsidian-mcp</code> github-mcp Manage GitHub issues &amp; PRs <code>tb install github-mcp</code> whatsapp-desktop-mcp Access WhatsApp messages <code>tb install whatsapp-desktop-mcp</code> pdf-mcp Process local documents <code>tb install pdf-mcp</code> meeting-notes-mcp Transcribe audio recordings <code>tb install meeting-notes-mcp</code>"},{"location":"#links","title":"Links","text":"<ul> <li>GitHub Repository</li> <li>PyPI Package</li> </ul>"},{"location":"features/notifications/","title":"Notifications","text":"<p>Toolbox provides a simple way to send notifications from your trigger scripts and MCP servers using ntfy.sh.</p>"},{"location":"features/notifications/#setup","title":"Setup","text":"<p>Your default notification topic is automatically configured during <code>tb setup</code>. To view or change it:</p> <pre><code># View current default notification topic\ntb settings\n\n# Set a new default topic\ntb set-notification-topic &lt;topic&gt;\n</code></pre> <p>To receive notifications on your phone:</p> <ol> <li>Install the ntfy.sh app</li> <li>Subscribe to your topic (e.g., <code>tb-username-a3f2</code>)</li> </ol>"},{"location":"features/notifications/#sending-notifications","title":"Sending Notifications","text":""},{"location":"features/notifications/#from-trigger-scripts","title":"From Trigger Scripts","text":"<p>Use the <code>notify</code> function from <code>toolbox_events</code> to send notifications:</p> <pre><code>from toolbox_events import notify\n\n# Simple notification (uses default topic)\nnotify(\"Task completed successfully\")\n\n# With title and priority\nnotify(\n    message=\"10 new repositories found matching 'MCP'\",\n    title=\"GitHub Search Results\",\n    priority=4  # 1=min, 2=low, 3=default, 4=high, 5=urgent\n)\n\n# With custom topic and tags\nnotify(\n    message=\"Server backup completed\",\n    title=\"Backup Status\",\n    tags=[\"backup\", \"success\"],\n    topic=\"server-alerts\"\n)\n</code></pre>"},{"location":"features/notifications/#priority-levels","title":"Priority Levels","text":"<p>Notifications support 5 priority levels:</p> <ul> <li><code>1</code> - Minimum priority</li> <li><code>2</code> - Low priority</li> <li><code>3</code> - Default priority (default)</li> <li><code>4</code> - High priority</li> <li><code>5</code> - Urgent priority</li> </ul>"},{"location":"features/notifications/#configuration","title":"Configuration","text":"<p>The notification system can be configured via environment variables:</p> <pre><code># Use custom ntfy server (default: https://ntfy.sh)\nexport TOOLBOX_NOTIFIER_SERVER_URL=https://your-ntfy-server.com\n\n# Set default topic\nexport TOOLBOX_NOTIFIER_DEFAULT_TOPIC=my-notifications\n</code></pre>"},{"location":"features/notifications/#example-notification-in-event-driven-trigger","title":"Example: Notification in Event-Driven Trigger","text":"<pre><code>from toolbox_events import get_events, notify\n\n# Process events and notify on important ones\nevents = get_events()\n\nimportant_count = 0\nfor event in events:\n    if event.name == \"critical.error\":\n        important_count += 1\n\nif important_count &gt; 0:\n    notify(\n        f\"\u26a0\ufe0f {important_count} errors detected\",\n        title=\"System Alert\",\n        priority=4,\n        tags=[\"error\", \"alert\"]\n    )\n</code></pre>"},{"location":"features/triggers/","title":"Triggers","text":"<p>Toolbox triggers allow you to automate tasks in your MCP pipeline. Triggers can run on a schedule or respond to events from MCP servers.</p>"},{"location":"features/triggers/#types-of-triggers","title":"Types of Triggers","text":"<p>Toolbox supports two types of triggers:</p> <ol> <li>Scheduled Triggers - Run scripts at specific times using cron expressions</li> <li>Event-Driven Triggers - Run scripts in response to events from MCP servers</li> </ol>"},{"location":"features/triggers/#setup","title":"Setup","text":"<p>To use triggers, you need to install the toolbox daemon. This will add the toolbox daemon to your launchd, so it will start automatically when you login.</p> <pre><code>tb daemon install\n</code></pre> <p>To uninstall and remove from launchd:</p> <pre><code>tb daemon uninstall\n</code></pre> <p>To see the status of the daemon:</p> <pre><code>tb daemon status\n</code></pre>"},{"location":"features/triggers/#scheduled-triggers","title":"Scheduled Triggers","text":"<p>Scheduled triggers run scripts at specific times using cron expressions.</p>"},{"location":"features/triggers/#creating-a-scheduled-trigger","title":"Creating a Scheduled Trigger","text":"<p>As an example trigger, the toolbox repository contains a script that scrapes trending github repositories that contain 'MCP' keywords. We can register this script to run daily at 12:00 by using the following command:</p> <pre><code>tb trigger add \\\n    --name \"github-trending\" \\\n    --script \"examples/search_github_trigger.py\" \\\n    --cron \"0 12 * * *\"\n</code></pre>"},{"location":"features/triggers/#cron-expressions","title":"Cron Expressions","text":"<p>The <code>--cron</code> parameter accepts standard cron expressions:</p> <ul> <li><code>0 12 * * *</code> - Daily at 12:00</li> <li><code>0 */6 * * *</code> - Every 6 hours</li> <li><code>0 9 * * 1</code> - Every Monday at 9:00</li> </ul> <p>For more detailed cron syntax and examples, see crontab.guru.</p> <p>Cron Schedule Format</p> <p>Toolbox uses croniter for parsing cron schedules and supports 6-field cron expressions, where the first field represents seconds.</p> <p>Example: <code>*/10 * * * * *</code> runs every 10 seconds</p>"},{"location":"features/triggers/#event-driven-triggers","title":"Event-Driven Triggers","text":"<p>Event-driven triggers respond to events sent by MCP servers. Toolbox automatically routes events from MCP servers to registered trigger scripts.</p>"},{"location":"features/triggers/#example-slack-to-obsidian-workflow","title":"Example: Slack to Obsidian Workflow","text":"<p>To illustrate how event-driven triggers work, let's create an example workflow that automatically saves Slack mentions to your Obsidian vault.</p> <p>Note: This is just an example, the actual events available from Slack may differ.</p>"},{"location":"features/triggers/#step-1-mcp-server-emits-events","title":"Step 1: MCP Server Emits Events","text":"<p>The MCP server emits an event when you are mentioned in a Slack message:</p> <pre><code># Slack MCP server emits events with message data\nfrom toolbox_events import send_event\n\nsend_event(\n    name=\"message.mentioned\",\n    data={\n        \"channel\": \"engineering\",\n        \"author\": \"Jane Doe\",\n        \"message\": \"Hey @you, can we review the API design?\"\n    }\n)\n</code></pre> <p>Each event automatically includes:</p> <ul> <li><code>source</code> - The name of the MCP server that sent the event</li> <li><code>timestamp</code> - The time the event was sent</li> </ul>"},{"location":"features/triggers/#step-2-create-a-trigger-script","title":"Step 2: Create a Trigger Script","text":"<p>Create a script that receives and processes these events, appending each mention to a markdown file in your Obsidian vault:</p> <pre><code># save_slack_to_obsidian.py\nfrom toolbox_events import get_events\nfrom pathlib import Path\n\nOBSIDIAN_VAULT = Path.home() / \"ObsidianVault\"\nMENTIONS_FILE = OBSIDIAN_VAULT / \"slack_mentions.md\"\n\nevents = get_events()\n\nfor event in events:\n    if event.name == \"message.mentioned\":\n        # Using automatic event.timestamp and custom data fields\n        content = (\n            f\"- [{event.timestamp}] \"\n            f\"**{event.data['author']}**: \"\n            f\"{event.data['message']}\\n\"\n        )\n        with open(MENTIONS_FILE, \"a\") as f:\n            f.write(content)\n</code></pre> <p>Note</p> <p><code>get_events()</code> returns only unprocessed events that match the trigger's registered event names and sources. Once consumed, events won't be received again in subsequent trigger runs.</p>"},{"location":"features/triggers/#step-3-register-the-trigger","title":"Step 3: Register the Trigger","text":"<p>Register the trigger to listen for <code>message.mentioned</code> events from the Slack MCP server:</p> <pre><code>tb trigger add \\\n    --name \"slack-to-obsidian\" \\\n    --script \"save_slack_to_obsidian.py\" \\\n    --event \"message.mentioned\" \\\n    --event-source \"slack-mcp\"\n</code></pre>"},{"location":"features/triggers/#event-filtering-options","title":"Event Filtering Options","text":"<p>When registering event-based triggers, you can control which events to receive:</p> <ul> <li>Multiple events/sources: Provide <code>--event</code> and <code>--event-source</code> multiple times</li> <li>All sources: Omit <code>--event-source</code> to listen for events from all sources</li> <li>All events from a source: Omit <code>--event</code> to listen for all events from specific sources</li> <li>Schedule-only: Omit both <code>--event</code> and <code>--event-source</code> to run only on schedule</li> </ul> <p>Example with multiple events:</p> <pre><code>tb trigger add \\\n    --name \"obsidian-processor\" \\\n    --script \"process_files.py\" \\\n    --event \"file.created\" \\\n    --event \"file.modified\" \\\n    --event \"file.deleted\" \\ # (1)!\n    --event-source \"obsidian-mcp\" # (2)!\n</code></pre> <ol> <li> <p>You can specify multiple <code>--event</code> flags to listen for multiple event types</p> </li> <li> <p>You can specify multiple <code>--event-source</code> flags to listen to events from multiple MCP servers</p> </li> </ol>"},{"location":"features/triggers/#managing-triggers","title":"Managing Triggers","text":""},{"location":"features/triggers/#list-all-triggers","title":"List All Triggers","text":"<pre><code>tb trigger list\n</code></pre>"},{"location":"features/triggers/#show-trigger-status","title":"Show Trigger Status","text":"<p>View the status and last 5 executions of a trigger:</p> <pre><code>tb trigger show github-trending -n 5\n</code></pre>"},{"location":"features/triggers/#remove-a-trigger","title":"Remove a Trigger","text":"<pre><code>tb trigger uninstall \"github-trending\"\n</code></pre>"},{"location":"features/triggers/#api-reference","title":"API Reference","text":""},{"location":"features/triggers/#sending-events-mcp-servers","title":"Sending Events (MCP Servers)","text":"<p>MCP servers can send events using the <code>toolbox_events</code> package:</p> <pre><code>from toolbox_events import send_event\n\nsend_event(\n    name=\"file_processed\",\n    data={\"filename\": \"document.pdf\", \"pages\": 10}\n)\n</code></pre>"},{"location":"features/triggers/#receiving-events-trigger-scripts","title":"Receiving Events (Trigger Scripts)","text":"<p>Trigger scripts receive events using <code>get_events()</code>:</p> <pre><code>from toolbox_events import get_events\n\nevents = get_events()\nfor event in events:\n    print(f\"{event.name}: {event.data}\")\n</code></pre>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#requirements","title":"Requirements","text":"<p>Before installing Toolbox, ensure you have:</p> <ul> <li>Python 3.12 or later</li> <li>uv - Fast Python package installer</li> </ul>"},{"location":"getting-started/installation/#install-from-pypi","title":"Install from PyPI","text":"<p>The recommended way to install Toolbox:</p> <pre><code>uv tool install --prerelease allow --python 3.12 -U syft-toolbox\n</code></pre> <p>Verify the installation:</p> <pre><code>tb info\n</code></pre>"},{"location":"getting-started/installation/#install-from-source","title":"Install from Source","text":"<p>For development or latest features:</p> <pre><code>git clone https://github.com/OpenMined/toolbox.git\ncd toolbox\nuv pip install -e .\n</code></pre>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#clang-issues","title":"CLang Issues","text":"<p>If you encounter CLang errors during installation:</p> <pre><code>uv python install --reinstall\n</code></pre> <p>This fixes Python in uv.</p>"},{"location":"getting-started/installation/#c-include-errors","title":"C++ Include Errors","text":"<p>If you see <code>#include &lt;string&gt;</code> errors:</p> <pre><code>CXXFLAGS=\"-isystem $(xcrun --show-sdk-path)/usr/include/c++/v1\" uv pip install -e .\n</code></pre>"},{"location":"getting-started/installation/#permission-issues","title":"Permission Issues","text":"<p>If you get permission errors, ensure you have write access to the uv tool directory. You may need to use <code>sudo</code> or adjust your PATH.</p>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>After installation, proceed to the Quick Start guide to install your first MCP server.</p>"},{"location":"getting-started/quick-start/","title":"Quick Start","text":"<p>This guide will get you up and running with Toolbox in minutes.</p>"},{"location":"getting-started/quick-start/#first-steps","title":"First Steps","text":""},{"location":"getting-started/quick-start/#1-verify-installation","title":"1. Verify Installation","text":"<p>After installing Toolbox, verify it's working:</p> <pre><code>tb info\n</code></pre>"},{"location":"getting-started/quick-start/#2-initial-setup","title":"2. Initial Setup","text":"<p>Run the setup command to configure Toolbox:</p> <pre><code>tb setup\n</code></pre> <p>This will:</p> <ul> <li>Configure your notification settings</li> <li>Set up analytics preferences</li> <li>Create necessary directories</li> </ul>"},{"location":"getting-started/quick-start/#basic-commands","title":"Basic Commands","text":""},{"location":"getting-started/quick-start/#browse-available-mcp-servers","title":"Browse Available MCP Servers","text":"<p>See what's available to install:</p> <pre><code>tb list-store\n</code></pre>"},{"location":"getting-started/quick-start/#install-your-first-mcp-server","title":"Install Your First MCP Server","text":"<p>Let's start with a popular one - Slack:</p> <pre><code>tb install slack-mcp\n</code></pre> <p>Follow the prompts to:</p> <ol> <li>Authenticate with Slack</li> <li>Configure which workspaces to monitor</li> <li>Set up any background agents</li> </ol>"},{"location":"getting-started/quick-start/#list-installed-apps","title":"List Installed Apps","text":"<p>View all your installed MCP servers:</p> <pre><code>tb list\n</code></pre>"},{"location":"getting-started/quick-start/#check-app-details","title":"Check App Details","text":"<p>Get detailed information about an installed app:</p> <pre><code>tb show slack-mcp\n</code></pre>"},{"location":"getting-started/quick-start/#view-logs","title":"View Logs","text":"<p>Monitor what your MCP server is doing:</p> <pre><code># View recent logs\ntb log slack-mcp\n\n# Follow logs in real-time\ntb log slack-mcp -f\n</code></pre>"},{"location":"getting-started/quick-start/#using-with-claude","title":"Using with Claude","text":"<p>Once you've installed an MCP server, it's automatically available in Claude Desktop:</p> <ol> <li>Open Claude Desktop</li> <li>Start a new conversation</li> <li>Your MCP servers will be available as tools Claude can use</li> <li>Try asking: \"Show me my recent Slack messages\"</li> </ol>"},{"location":"getting-started/quick-start/#whats-next","title":"What's Next?","text":"<ul> <li>Learn about Triggers to automate tasks</li> <li>Set up Notifications for important events</li> <li>Browse available MCP servers with <code>tb list-store</code></li> <li>Check out Use Cases for inspiration</li> </ul>"},{"location":"getting-started/quick-start/#getting-help","title":"Getting Help","text":"<ul> <li>Run <code>tb --help</code> for command documentation</li> <li>Report issues at GitHub Issues</li> <li>Join our community discussions</li> </ul>"},{"location":"use-cases/use_cases/","title":"Use cases","text":""},{"location":"use-cases/use_cases/#customizable-custom-topic-tracking-discord-whatsapp-github-slack","title":"\ud83e\udde0\ud83d\udd0e Customizable, Custom Topic Tracking (Discord, Whatsapp, Github, Slack)","text":"<p>Follow technical topics across multiple Discord servers (or other sources) with periodic, fully customizable summaries. Tailor what you want to see using simple prompt files \u2014 get only the updates that matter, automatically and efficiently.</p>"},{"location":"use-cases/use_cases/#one-command-ticket-creation-obsidian-github","title":"\ud83d\udccb\u26a1 One-Command Ticket Creation (Obsidian, Github)","text":"<p>Turn your Obsidian TODOs into GitHub issues with a single command: no copy-pasting, no clicking, just seamless ticket creation directly from your notes.</p>"},{"location":"use-cases/use_cases/#llm-driven-custom-notifications-slack-discord-whatsapp","title":"\ud83d\udd14\u2728 LLM-driven custom notifications (Slack, Discord, Whatsapp)","text":"<p>Use simple prompts or code to write instructions to decide when a message deserves a reminder (forgot to respond, missed a todo, etc)</p>"},{"location":"use-cases/use_cases/#organize-your-communication-for-projects-or-campaigns-slack-discord-google-sheets-google-calendar","title":"\ud83d\udcca\ud83e\ude84 Organize your communication for Projects or Campaigns (Slack, Discord, Google Sheets, Google Calendar)","text":"<p>Log every person you\u2019ve reached out to around a certain topic into a Google Sheet, complete with date, calendar events and status</p>"}]}