#!/usr/bin/env just --justfile
# Vue.js and FastAPI development commands


deploy toolbox_dir="$(cd ../.. && pwd)":
    #!/bin/bash
    TOOLBOX_DIR={{toolbox_dir}} ./deploy_omni.sh

sync-data:
    #!/bin/bash
    scp -r ~/.twitter-mcp/tweet_toolbox_store.db toolbox-prod:/home/azureuser/.twitter-mcp/tweet_toolbox_store.db

sync-summaries:
    #!/bin/bash
    scp -r ~/.twitter-mcp/db.sqlite toolbox-prod:/home/azureuser/.twitter-mcp/db.sqlite

sync-x-credentials:
    #!/bin/bash
    ssh toolbox-prod "mkdir -p /home/azureuser/.omni/scraper_data"
    scp ~/.omni/scraper_data/x_cookies.json toolbox-prod:/home/azureuser/.omni/scraper_data/x_cookies.json

# Kill existing dev processes
kill-dev:
    #!/bin/bash
    pkill -f "npm run dev" || true
    pkill -f "python.*app.py" || true
    pkill -f "uvicorn.*app:app" || true


# Install dependencies only
install:
    #!/bin/bash
    npm install
    uv pip install -e .

# Run both frontend and backend development servers
dev:
    #!/bin/bash
    just kill-dev
    trap 'just kill-dev' EXIT
    echo "Starting backend server..."
    export USE_ANTHROPIC=True
    export USE_CACHED_X_COOKIES=False
    cd omni && python app.py &
    BACKEND_PID=$!
    echo "Backend started with PID: $BACKEND_PID"
    echo "Starting frontend server..."
    npm run dev &
    FRONTEND_PID=$!
    echo "Frontend started with PID: $FRONTEND_PID"
    wait

# Build for production
build:
    #!/bin/bash
    npm run build

# Preview production build
preview:
    #!/bin/bash
    npm run preview

# Clean node_modules and reinstall
clean-install:
    #!/bin/bash
    rm -rf node_modules package-lock.json
    npm install
    uv pip install -e .